import axios from "axios";
import config from '../config.cjs';

const repo = async (m, gss) => {
  const prefix = config.PREFIX;
  const cmd = m.body.startsWith(prefix) ? m.body.slice(prefix.length).split(" ")[0].toLowerCase() : "";

  if (["repo", "sc", "script", "info"].includes(cmd)) {
    const githubRepoURL = "https://github.com/tonicmeef/TONIC-MD";

    try {
      // Extract username and repo name from the URL
      const [, username, repoName] = githubRepoURL.match(/github\.com\/([^/]+)\/([^/]+)/);

      // Fetch repository details using GitHub API
      const response = await axios.get(`https://api.github.com/repos/${username}/${repoName}`);

      if (!response.data) {
        throw new Error("GitHub API request failed.");
      }

      const repoData = response.data;

      // Format the repository information
      const formattedInfo = `‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚ä∑
‚îä ü§ñ ·¥õ·¥è…¥…™·¥Ñ-·¥ç·¥Ö  Ä·¥á·¥ò·¥è …™…¥“ì·¥è ü§ñ
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚ä∑
‚ï≠‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚ä∑
‚ïëüí° *…¥·¥Ä·¥ç·¥á:* ${repoData.name}
‚ïëüë§ *·¥è·¥°…¥·¥á Ä:* ·¥õ·¥è…¥…™·¥Ñ ·¥ç·¥ú…¥·¥è·¥Ö·¥Ä·¥°·¥Ä“ì·¥Ä
‚ïë‚≠ê *·¥õ·¥è·¥õ·¥Ä ü s·¥õ·¥Ä Äs:* ${repoData.stargazers_count}
‚ïëüç¥ *·¥Ö·¥Ä…™ ü è ·¥ús·¥á Äs:* ${repoData.forks_count}
‚ïëüîó *…¢…™·¥õ ú·¥ú ô  ü…™…¥·¥ã:*  ${repoData.html_url}
‚ïë‚ùó *·¥Ö·¥ás·¥Ñ Ä…™·¥ò·¥õ…™·¥è…¥:*  ${repoData.description || "No description"}
‚ï∞‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÅ‚ä∑

 ·¥Ö·¥è…¥·¥õ “ì·¥è Ä…¢·¥á·¥õ ·¥õ·¥è s·¥õ·¥Ä Ä & “ì·¥è Ä·¥ã ·¥õ ú·¥á  Ä·¥á·¥ò·¥èüåü
 
> *¬© P·¥è·¥°·¥á Ä·¥á·¥Ö B è T·¥è…¥…™·¥Ñ T·¥á·¥Ñ ú I…¥·¥Ñ.‚ô°*`;

      // Send an image with the formatted info as a caption
      await gss.sendMessage(
        m.from,
        {
          image: { url: "https://files.catbox.moe/ydk0a8.jpg" },
          caption: formattedInfo,
          contextInfo: {
            mentionedJid: [m.sender],
            forwardingScore: 999,
            isForwarded: true,
            forwardedNewsletterMessageInfo: {
              newsletterJid: "120363374632065395@newsletter",
              newsletterName: "T·¥è…¥…™·¥Ñ T·¥á·¥Ñ ú I…¥·¥Ñ.",
              serverMessageId: 143,
            },
          },
        },
        { quoted: m }
      );

      // Send the audio file with context info
      await gss.sendMessage(
        m.from,
        {
          audio: { url: null },
          mimetype: "audio/mp4",
          ptt: true,
          contextInfo: {
            mentionedJid: [m.sender],
            forwardingScore: 999,
            isForwarded: true,
            forwardedNewsletterMessageInfo: {
              newsletterJid: "120363374632065395@newsletter",
              newsletterName: "T·¥è…¥…™·¥Ñ T·¥á·¥Ñ ú I…¥·¥Ñ.",
              serverMessageId: 143,
            },
          },
        },
        { quoted: m }
      );
    } catch (error) {
      console.error("Error in repo command:", error);
      m.reply("Sorry, something went wrong while fetching the repository information. Please try again later.");
    }
  }
};

export default repo;